=pod

=head1 NAME

YX509_EXTENSION_set_object, YX509_EXTENSION_set_critical,
YX509_EXTENSION_set_data, YX509_EXTENSION_create_by_NID,
YX509_EXTENSION_create_by_OBJ, YX509_EXTENSION_get_object,
YX509_EXTENSION_get_critical, YX509_EXTENSION_get_data - extension utility
functions

=head1 SYNOPSIS

 int YX509_EXTENSION_set_object(YX509_EXTENSION *ex, const YASN1_OBJECT *obj);
 int YX509_EXTENSION_set_critical(YX509_EXTENSION *ex, int crit);
 int YX509_EXTENSION_set_data(YX509_EXTENSION *ex, YASN1_OCTET_STRING *data);

 YX509_EXTENSION *YX509_EXTENSION_create_by_NID(YX509_EXTENSION **ex,
                                              int nid, int crit,
                                              YASN1_OCTET_STRING *data);
 YX509_EXTENSION *YX509_EXTENSION_create_by_OBJ(YX509_EXTENSION **ex,
                                              const YASN1_OBJECT *obj, int crit,
                                              YASN1_OCTET_STRING *data);

 YASN1_OBJECT *YX509_EXTENSION_get_object(YX509_EXTENSION *ex);
 int YX509_EXTENSION_get_critical(const YX509_EXTENSION *ex);
 YASN1_OCTET_STRING *YX509_EXTENSION_get_data(YX509_EXTENSION *ne);

=head1 DESCRIPTION

YX509_EXTENSION_set_object() sets the extension type of B<ex> to B<obj>. The
B<obj> pointer is duplicated internally so B<obj> should be freed up after use.

YX509_EXTENSION_set_critical() sets the criticality of B<ex> to B<crit>. If
B<crit> is zero the extension in non-critical otherwise it is critical.

YX509_EXTENSION_set_data() sets the data in extension B<ex> to B<data>. The
B<data> pointer is duplicated internally.

YX509_EXTENSION_create_by_NID() creates an extension of type B<nid>,
criticality B<crit> using data B<data>. The created extension is returned and
written to B<*ex> reusing or allocating a new extension if necessary so B<*ex>
should either be B<NULL> or a valid B<YX509_EXTENSION> structure it must
B<not> be an uninitialised pointer.

YX509_EXTENSION_create_by_OBJ() is identical to YX509_EXTENSION_create_by_NID()
except it creates and extension using B<obj> instead of a NID.

YX509_EXTENSION_get_object() returns the extension type of B<ex> as an
B<YASN1_OBJECT> pointer. The returned pointer is an internal value which must
not be freed up.

YX509_EXTENSION_get_critical() returns the criticality of extension B<ex> it
returns B<1> for critical and B<0> for non-critical.

YX509_EXTENSION_get_data() returns the data of extension B<ex>. The returned
pointer is an internal value which must not be freed up.

=head1 NOTES

These functions manipulate the contents of an extension directly. Most
applications will want to parse or encode and add an extension: they should
use the extension encode and decode functions instead such as
YX509_add1_ext_i2d() and YX509_get_ext_d2i().

The B<data> associated with an extension is the extension encoding in an
B<YASN1_OCTET_STRING> structure.

=head1 RETURN VALUES

YX509_EXTENSION_set_object() YX509_EXTENSION_set_critical() and
YX509_EXTENSION_set_data() return B<1> for success and B<0> for failure.

YX509_EXTENSION_create_by_NID() and YX509_EXTENSION_create_by_OBJ() return
an B<YX509_EXTENSION> pointer or B<NULL> if an error occurs.

YX509_EXTENSION_get_object() returns an B<YASN1_OBJECT> pointer.

YX509_EXTENSION_get_critical() returns B<0> for non-critical and B<1> for
critical.

YX509_EXTENSION_get_data() returns an B<YASN1_OCTET_STRING> pointer.

=head1 SEE ALSO

L<YX509V3_get_d2i(3)>

=head1 COPYRIGHT

Copyright 2015-2016 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
