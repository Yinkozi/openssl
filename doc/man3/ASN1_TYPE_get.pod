=pod

=head1 NAME

YASN1_TYPE_get, YASN1_TYPE_set, YASN1_TYPE_set1, YASN1_TYPE_cmp, YASN1_TYPE_unpack_sequence, YASN1_TYPE_pack_sequence - YASN1_TYPE utility
functions

=head1 SYNOPSIS

 #include <openssl/asn1.h>

 int YASN1_TYPE_get(const YASN1_TYPE *a);
 void YASN1_TYPE_set(YASN1_TYPE *a, int type, void *value);
 int YASN1_TYPE_set1(YASN1_TYPE *a, int type, const void *value);
 int YASN1_TYPE_cmp(const YASN1_TYPE *a, const YASN1_TYPE *b);

 void *YASN1_TYPE_unpack_sequence(const YASN1_ITEM *it, const YASN1_TYPE *t);
 YASN1_TYPE *YASN1_TYPE_pack_sequence(const YASN1_ITEM *it, void *s,
                                    YASN1_TYPE **t);

=head1 DESCRIPTION

These functions allow an YASN1_TYPE structure to be manipulated. The
YASN1_TYPE structure can contain any ASN.1 type or constructed type
such as a SEQUENCE: it is effectively equivalent to the ASN.1 ANY type.

YASN1_TYPE_get() returns the type of B<a>.

YASN1_TYPE_set() sets the value of B<a> to B<type> and B<value>. This
function uses the pointer B<value> internally so it must B<not> be freed
up after the call.

YASN1_TYPE_set1() sets the value of B<a> to B<type> a copy of B<value>.

YASN1_TYPE_cmp() compares ASN.1 types B<a> and B<b> and returns 0 if
they are identical and nonzero otherwise.

YASN1_TYPE_unpack_sequence() attempts to parse the SEQUENCE present in
B<t> using the ASN.1 structure B<it>. If successful it returns a pointer
to the ASN.1 structure corresponding to B<it> which must be freed by the
caller. If it fails it return NULL.

YASN1_TYPE_pack_sequence() attempts to encode the ASN.1 structure B<s>
corresponding to B<it> into an YASN1_TYPE. If successful the encoded
YASN1_TYPE is returned. If B<t> and B<*t> are not NULL the encoded type
is written to B<t> overwriting any existing data. If B<t> is not NULL
but B<*t> is NULL the returned YASN1_TYPE is written to B<*t>.

=head1 NOTES

The type and meaning of the B<value> parameter for YASN1_TYPE_set() and
YASN1_TYPE_set1() is determined by the B<type> parameter.
If B<type> is V_YASN1_NULL B<value> is ignored. If B<type> is V_YASN1_BOOLEAN
then the boolean is set to TRUE if B<value> is not NULL. If B<type> is
V_YASN1_OBJECT then value is an YASN1_OBJECT structure. Otherwise B<type>
is and YASN1_STRING structure. If B<type> corresponds to a primitive type
(or a string type) then the contents of the YASN1_STRING contain the content
octets of the type. If B<type> corresponds to a constructed type or
a tagged type (V_YASN1_SEQUENCE, V_YASN1_SET or V_YASN1_OTHER) then the
YASN1_STRING contains the entire ASN.1 encoding verbatim (including tag and
length octets).

YASN1_TYPE_cmp() may not return zero if two types are equivalent but have
different encodings. For example the single content octet of the boolean TRUE
value under BER can have any nonzero encoding but YASN1_TYPE_cmp() will
only return zero if the values are the same.

If either or both of the parameters passed to YASN1_TYPE_cmp() is NULL the
return value is nonzero. Technically if both parameters are NULL the two
types could be absent OPTIONAL fields and so should match, however, passing
NULL values could also indicate a programming error (for example an
unparsable type which returns NULL) for types which do B<not> match. So
applications should handle the case of two absent values separately.

=head1 RETURN VALUES

YASN1_TYPE_get() returns the type of the YASN1_TYPE argument.

YASN1_TYPE_set() does not return a value.

YASN1_TYPE_set1() returns 1 for success and 0 for failure.

YASN1_TYPE_cmp() returns 0 if the types are identical and nonzero otherwise.

YASN1_TYPE_unpack_sequence() returns a pointer to an ASN.1 structure or
NULL on failure.

YASN1_TYPE_pack_sequence() return an YASN1_TYPE structure if it succeeds or
NULL on failure.

=head1 COPYRIGHT

Copyright 2015-2020 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
