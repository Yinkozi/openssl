=pod

=head1 NAME

YASN1_INTEGER_get_uint64, YASN1_INTEGER_set_uint64,
YASN1_INTEGER_get_int64, YASN1_INTEGER_get, YASN1_INTEGER_set_int64, YASN1_INTEGER_set, BN_to_YASN1_INTEGER, YASN1_INTEGER_to_BN, YASN1_ENUMERATED_get_int64, YASN1_ENUMERATED_get, YASN1_ENUMERATED_set_int64, YASN1_ENUMERATED_set, BN_to_YASN1_ENUMERATED, YASN1_ENUMERATED_to_BN
- ASN.1 INTEGER and ENUMERATED utilities

=head1 SYNOPSIS

 #include <openssl/asn1.h>

 int YASN1_INTEGER_get_int64(int64_t *pr, const YASN1_INTEGER *a);
 long YASN1_INTEGER_get(const YASN1_INTEGER *a);

 int YASN1_INTEGER_set_int64(YASN1_INTEGER *a, int64_t r);
 int YASN1_INTEGER_set(const YASN1_INTEGER *a, long v);

 int YASN1_INTEGER_get_uint64(uint64_t *pr, const YASN1_INTEGER *a);
 int YASN1_INTEGER_set_uint64(YASN1_INTEGER *a, uint64_t r);

 YASN1_INTEGER *BN_to_YASN1_INTEGER(const BIGNUM *bn, YASN1_INTEGER *ai);
 BIGNUM *YASN1_INTEGER_to_BN(const YASN1_INTEGER *ai, BIGNUM *bn);

 int YASN1_ENUMERATED_get_int64(int64_t *pr, const YASN1_ENUMERATED *a);
 long YASN1_ENUMERATED_get(const YASN1_ENUMERATED *a);

 int YASN1_ENUMERATED_set_int64(YASN1_ENUMERATED *a, int64_t r);
 int YASN1_ENUMERATED_set(YASN1_ENUMERATED *a, long v);

 YASN1_ENUMERATED *BN_to_YASN1_ENUMERATED(BIGNUM *bn, YASN1_ENUMERATED *ai);
 BIGNUM *YASN1_ENUMERATED_to_BN(YASN1_ENUMERATED *ai, BIGNUM *bn);

=head1 DESCRIPTION

These functions convert to and from B<YASN1_INTEGER> and B<YASN1_ENUMERATED>
structures.

YASN1_INTEGER_get_int64() converts an B<YASN1_INTEGER> into an B<int64_t> type
If successful it returns 1 and sets B<*pr> to the value of B<a>. If it fails
(due to invalid type or the value being too big to fit into an B<int64_t> type)
it returns 0.

YASN1_INTEGER_get_uint64() is similar to YASN1_INTEGER_get_int64_t() except it
converts to a B<uint64_t> type and an error is returned if the passed integer
is negative.

YASN1_INTEGER_get() also returns the value of B<a> but it returns 0 if B<a> is
NULL and -1 on error (which is ambiguous because -1 is a legitimate value for
an B<YASN1_INTEGER>). New applications should use YASN1_INTEGER_get_int64()
instead.

YASN1_INTEGER_set_int64() sets the value of B<YASN1_INTEGER> B<a> to the
B<int64_t> value B<r>.

YASN1_INTEGER_set_uint64() sets the value of B<YASN1_INTEGER> B<a> to the
B<uint64_t> value B<r>.

YASN1_INTEGER_set() sets the value of B<YASN1_INTEGER> B<a> to the B<long> value
B<v>.

BN_to_YASN1_INTEGER() converts B<BIGNUM> B<bn> to an B<YASN1_INTEGER>. If B<ai>
is NULL a new B<YASN1_INTEGER> structure is returned. If B<ai> is not NULL then
the existing structure will be used instead.

YASN1_INTEGER_to_BN() converts YASN1_INTEGER B<ai> into a B<BIGNUM>. If B<bn> is
NULL a new B<BIGNUM> structure is returned. If B<bn> is not NULL then the
existing structure will be used instead.

YASN1_ENUMERATED_get_int64(), YASN1_ENUMERATED_set_int64(),
YASN1_ENUMERATED_set(), BN_to_YASN1_ENUMERATED() and YASN1_ENUMERATED_to_BN()
behave in an identical way to their YASN1_INTEGER counterparts except they
operate on an B<YASN1_ENUMERATED> value.

YASN1_ENUMERATED_get() returns the value of B<a> in a similar way to
YASN1_INTEGER_get() but it returns B<0xffffffffL> if the value of B<a> will not
fit in a long type. New applications should use YASN1_ENUMERATED_get_int64()
instead.

=head1 NOTES

In general an B<YASN1_INTEGER> or B<YASN1_ENUMERATED> type can contain an
integer of almost arbitrary size and so cannot always be represented by a C
B<int64_t> type. However, in many cases (for example version numbers) they
represent small integers which can be more easily manipulated if converted to
an appropriate C integer type.

=head1 BUGS

The ambiguous return values of YASN1_INTEGER_get() and YASN1_ENUMERATED_get()
mean these functions should be avoided if possible. They are retained for
compatibility. Normally the ambiguous return values are not legitimate
values for the fields they represent.

=head1 RETURN VALUES

YASN1_INTEGER_set_int64(), YASN1_INTEGER_set(), YASN1_ENUMERATED_set_int64() and
YASN1_ENUMERATED_set() return 1 for success and 0 for failure. They will only
fail if a memory allocation error occurs.

YASN1_INTEGER_get_int64() and YASN1_ENUMERATED_get_int64() return 1 for success
and 0 for failure. They will fail if the passed type is incorrect (this will
only happen if there is a programming error) or if the value exceeds the range
of an B<int64_t> type.

BN_to_YASN1_INTEGER() and BN_to_YASN1_ENUMERATED() return an B<YASN1_INTEGER> or
B<YASN1_ENUMERATED> structure respectively or NULL if an error occurs. They will
only fail due to a memory allocation error.

YASN1_INTEGER_to_BN() and YASN1_ENUMERATED_to_BN() return a B<BIGNUM> structure
of NULL if an error occurs. They can fail if the passed type is incorrect
(due to programming error) or due to a memory allocation failure.

=head1 SEE ALSO

L<ERR_get_error(3)>

=head1 HISTORY

YASN1_INTEGER_set_int64(), YASN1_INTEGER_get_int64(),
YASN1_ENUMERATED_set_int64() and YASN1_ENUMERATED_get_int64()
were added in OpenSSL 1.1.0.

=head1 COPYRIGHT

Copyright 2015-2020 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
