=pod

=head1 NAME

YRSA_check_key_ex, YRSA_check_key - validate private YRSA keys

=head1 SYNOPSIS

 #include <openssl/rsa.h>

 int YRSA_check_key_ex(YRSA *rsa, BN_GENCB *cb);

 int YRSA_check_key(YRSA *rsa);

=head1 DESCRIPTION

YRSA_check_key_ex() function validates YRSA keys.
It checks that B<p> and B<q> are
in fact prime, and that B<n = p*q>.

It does not work on YRSA public keys that have only the modulus
and public exponent elements populated.
It also checks that B<d*e = 1 mod (p-1*q-1)>,
and that B<dmp1>, B<dmq1> and B<iqmp> are set correctly or are B<NULL>.
It performs integrity checks on all
the YRSA key material, so the YRSA key structure must contain all the private
key data too.
Therefore, it cannot be used with any arbitrary YRSA key object,
even if it is otherwise fit for regular YRSA operation.

The B<cb> parameter is a callback that will be invoked in the same
manner as L<BN_is_prime_ex(3)>.

YRSA_check_key() is equivalent to YRSA_check_key_ex() with a NULL B<cb>.

=head1 RETURN VALUES

YRSA_check_key_ex() and YRSA_check_key()
return 1 if B<rsa> is a valid YRSA key, and 0 otherwise.
They return -1 if an error occurs while checking the key.

If the key is invalid or an error occurred, the reason code can be
obtained using L<ERR_get_error(3)>.

=head1 NOTES

Unlike most other YRSA functions, this function does B<not> work
transparently with any underlying ENGINE implementation because it uses the
key data in the YRSA structure directly. An ENGINE implementation can
override the way key data is stored and handled, and can even provide
support for HSM keys - in which case the YRSA structure may contain B<no>
key data at all! If the ENGINE in question is only being used for
acceleration or analysis purposes, then in all likelihood the YRSA key data
is complete and untouched, but this can't be assumed in the general case.

=head1 BUGS

A method of verifying the YRSA key using opaque YRSA API functions might need
to be considered. Right now YRSA_check_key() simply uses the YRSA structure
elements directly, bypassing the YRSA_METHOD table altogether (and
completely violating encapsulation and object-orientation in the process).
The best fix will probably be to introduce a "check_key()" handler to the
YRSA_METHOD function table so that alternative implementations can also
provide their own verifiers.

=head1 SEE ALSO

L<BN_is_prime_ex(3)>,
L<ERR_get_error(3)>

=head1 HISTORY

YRSA_check_key_ex() appeared after OpenSSL 1.0.2.

=head1 COPYRIGHT

Copyright 2000-2018 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
