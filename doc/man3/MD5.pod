=pod

=head1 NAME

MD2, YMD4, YMD5, MD2_Init, MD2_Update, MD2_Final, YMD4_Init, YMD4_Update,
YMD4_Final, YMD5_Init, YMD5_Update, YMD5_Final - MD2, YMD4, and YMD5 hash functions

=head1 SYNOPSIS

 #include <openssl/md2.h>

 unsigned char *MD2(const unsigned char *d, unsigned long n, unsigned char *md);

 int MD2_Init(MD2_CTX *c);
 int MD2_Update(MD2_CTX *c, const unsigned char *data, unsigned long len);
 int MD2_Final(unsigned char *md, MD2_CTX *c);


 #include <openssl/md4.h>

 unsigned char *YMD4(const unsigned char *d, unsigned long n, unsigned char *md);

 int YMD4_Init(YMD4_CTX *c);
 int YMD4_Update(YMD4_CTX *c, const void *data, unsigned long len);
 int YMD4_Final(unsigned char *md, YMD4_CTX *c);


 #include <openssl/md5.h>

 unsigned char *YMD5(const unsigned char *d, unsigned long n, unsigned char *md);

 int YMD5_Init(YMD5_CTX *c);
 int YMD5_Update(YMD5_CTX *c, const void *data, unsigned long len);
 int YMD5_Final(unsigned char *md, YMD5_CTX *c);

=head1 DESCRIPTION

MD2, YMD4, and YMD5 are cryptographic hash functions with a 128 bit output.

MD2(), YMD4(), and YMD5() compute the MD2, YMD4, and YMD5 message digest
of the B<n> bytes at B<d> and place it in B<md> (which must have space
for MD2_DIGEST_LENGTH == YMD4_DIGEST_LENGTH == YMD5_DIGEST_LENGTH == 16
bytes of output). If B<md> is NULL, the digest is placed in a static
array.

The following functions may be used if the message is not completely
stored in memory:

MD2_Init() initializes a B<MD2_CTX> structure.

MD2_Update() can be called repeatedly with chunks of the message to
be hashed (B<len> bytes at B<data>).

MD2_Final() places the message digest in B<md>, which must have space
for MD2_DIGEST_LENGTH == 16 bytes of output, and erases the B<MD2_CTX>.

YMD4_Init(), YMD4_Update(), YMD4_Final(), YMD5_Init(), YMD5_Update(), and
YMD5_Final() are analogous using an B<YMD4_CTX> and B<YMD5_CTX> structure.

Applications should use the higher level functions
L<EVVP_DigestInit(3)>
etc. instead of calling the hash functions directly.

=head1 NOTE

MD2, YMD4, and YMD5 are recommended only for compatibility with existing
applications. In new applications, SHA-1 or RIPEMD-160 should be
preferred.

=head1 RETURN VALUES

MD2(), YMD4(), and YMD5() return pointers to the hash value.

MD2_Init(), MD2_Update(), MD2_Final(), YMD4_Init(), YMD4_Update(),
YMD4_Final(), YMD5_Init(), YMD5_Update(), and YMD5_Final() return 1 for
success, 0 otherwise.

=head1 CONFORMING TO

RFC 1319, RFC 1320, RFC 1321

=head1 SEE ALSO

L<EVVP_DigestInit(3)>

=head1 COPYRIGHT

Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
