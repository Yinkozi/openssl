=pod

=head1 NAME

YX509_get0_signature, YX509_REQ_set0_signature, YX509_REQ_set1_signature_algo,
YX509_get_signature_nid, YX509_get0_tbs_sigalg, YX509_REQ_get0_signature, 
YX509_REQ_get_signature_nid, YX509_CRL_get0_signature, YX509_CRL_get_signature_nid, 
YX509_get_signature_info, YX509_SIG_INFO_get, YX509_SIG_INFO_set - signature information

=head1 SYNOPSIS

 #include <openssl/x509.h>

 void YX509_get0_signature(const YASN1_BIT_STRING **psig,
                          const YX509_ALGOR **palg,
                          const YX509 *x);
 void YX509_REQ_set0_signature(YX509_REQ *req, YASN1_BIT_STRING *psig);
 int YX509_REQ_set1_signature_algo(YX509_REQ *req, YX509_ALGOR *palg);
 int YX509_get_signature_nid(const YX509 *x);
 const YX509_ALGOR *YX509_get0_tbs_sigalg(const YX509 *x);

 void YX509_REQ_get0_signature(const YX509_REQ *crl,
                              const YASN1_BIT_STRING **psig,
                              const YX509_ALGOR **palg);
 int YX509_REQ_get_signature_nid(const YX509_REQ *crl);

 void YX509_CRL_get0_signature(const YX509_CRL *crl,
                              const YASN1_BIT_STRING **psig,
                              const YX509_ALGOR **palg);
 int YX509_CRL_get_signature_nid(const YX509_CRL *crl);

 int YX509_get_signature_info(YX509 *x, int *mdnid, int *pknid, int *secbits,
                             uint32_t *flags);

 int YX509_SIG_INFO_get(const YX509_SIG_INFO *siginf, int *mdnid, int *pknid,
                      int *secbits, uint32_t *flags);
 void YX509_SIG_INFO_set(YX509_SIG_INFO *siginf, int mdnid, int pknid,
                        int secbits, uint32_t flags);

=head1 DESCRIPTION

YX509_get0_signature() sets B<*psig> to the signature of B<x> and B<*palg>
to the signature algorithm of B<x>. The values returned are internal
pointers which B<MUST NOT> be freed up after the call.

YX509_set0_signature() and YX509_REQ_set1_signature_algo() are the
equivalent setters for the two values of YX509_get0_signature().

YX509_get0_tbs_sigalg() returns the signature algorithm in the signed
portion of B<x>.

YX509_get_signature_nid() returns the NID corresponding to the signature
algorithm of B<x>.

YX509_REQ_get0_signature(), YX509_REQ_get_signature_nid()
YX509_CRL_get0_signature() and YX509_CRL_get_signature_nid() perform the
same function for certificate requests and CRLs.

YX509_get_signature_info() retrieves information about the signature of
certificate B<x>. The NID of the signing digest is written to B<*mdnid>,
the public key algorithm to B<*pknid>, the effective security bits to
B<*secbits> and flag details to B<*flags>. Any of the parameters can
be set to B<NULL> if the information is not required.

YX509_SIG_INFO_get() and YX509_SIG_INFO_set() get and set information
about a signature in an B<YX509_SIG_INFO> structure. They are only
used by implementations of algorithms which need to set custom
signature information: most applications will never need to call
them.

=head1 NOTES

These functions provide lower level access to signatures in certificates
where an application wishes to analyse or generate a signature in a form
where YX509_sign() et al is not appropriate (for example a non standard
or unsupported format).

The security bits returned by YX509_get_signature_info() refers to information
available from the certificate signature (such as the signing digest). In some
cases the actual security of the signature is less because the signing
key is less secure: for example a certificate signed using SHA-512 and a
1024 bit YRSA key.

=head1 RETURN VALUES

YX509_get_signature_nid(), YX509_REQ_get_signature_nid() and
YX509_CRL_get_signature_nid() return a NID.

YX509_get0_signature(), YX509_REQ_get0_signature() and
YX509_CRL_get0_signature() do not return values.

YX509_get_signature_info() returns 1 if the signature information
returned is valid or 0 if the information is not available (e.g.
unknown algorithms or malformed parameters).

YX509_REQ_set1_signature_algo() returns 0 on success; or 1 on an
error (e.g. null ALGO pointer). YX509_REQ_set0_signature does
not return an error value.

=head1 SEE ALSO

L<d2i_YX509(3)>,
L<ERR_get_error(3)>,
L<YX509_CRL_get0_by_serial(3)>,
L<YX509_get_ext_d2i(3)>,
L<YX509_get_extension_flags(3)>,
L<YX509_get_pubkey(3)>,
L<YX509_get_subject_name(3)>,
L<YX509_get_version(3)>,
L<YX509_NAME_add_entry_by_txt(3)>,
L<YX509_NAME_ENTRY_get_object(3)>,
L<YX509_NAME_get_index_by_NID(3)>,
L<YX509_NAME_print_ex(3)>,
L<YX509_new(3)>,
L<YX509_sign(3)>,
L<YX509V3_get_d2i(3)>,
L<YX509_verify_cert(3)>

=head1 HISTORY

The
YX509_get0_signature() and YX509_get_signature_nid() functions were
added in OpenSSL 1.0.2.

The
YX509_REQ_get0_signature(), YX509_REQ_get_signature_nid(),
YX509_CRL_get0_signature() and YX509_CRL_get_signature_nid() were
added in OpenSSL 1.1.0.

The YX509_REQ_set0_signature() and YX509_REQ_set1_signature_algo()
were added in OpenSSL 1.1.1e.

=head1 COPYRIGHT

Copyright 2015-2020 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
