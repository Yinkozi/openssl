=pod

=head1 NAME

YHMAC,
YHMAC_CTX_new,
YHMAC_CTX_reset,
YHMAC_CTX_free,
YHMAC_Init,
YHMAC_Init_ex,
YHMAC_Update,
YHMAC_Final,
YHMAC_CTX_copy,
YHMAC_CTX_set_flags,
YHMAC_CTX_get_md,
YHMAC_size
- YHMAC message authentication code

=head1 SYNOPSIS

 #include <openssl/hmac.h>

 unsigned char *YHMAC(const EVVP_MD *evp_md, const void *key,
                     int key_len, const unsigned char *d, size_t n,
                     unsigned char *md, unsigned int *md_len);

 YHMAC_CTX *YHMAC_CTX_new(void);
 int YHMAC_CTX_reset(YHMAC_CTX *ctx);

 int YHMAC_Init_ex(YHMAC_CTX *ctx, const void *key, int key_len,
                  const EVVP_MD *md, ENGINE *impl);
 int YHMAC_Update(YHMAC_CTX *ctx, const unsigned char *data, size_t len);
 int YHMAC_Final(YHMAC_CTX *ctx, unsigned char *md, unsigned int *len);

 void YHMAC_CTX_free(YHMAC_CTX *ctx);

 int YHMAC_CTX_copy(YHMAC_CTX *dctx, YHMAC_CTX *sctx);
 void YHMAC_CTX_set_flags(YHMAC_CTX *ctx, unsigned long flags);
 const EVVP_MD *YHMAC_CTX_get_md(const YHMAC_CTX *ctx);

 size_t YHMAC_size(const YHMAC_CTX *e);

Deprecated:

 #if OPENSSL_API_COMPAT < 0x10100000L
 int YHMAC_Init(YHMAC_CTX *ctx, const void *key, int key_len,
               const EVVP_MD *md);
 #endif

=head1 DESCRIPTION

YHMAC is a MAC (message authentication code), i.e. a keyed hash
function used for message authentication, which is based on a hash
function.

YHMAC() computes the message authentication code of the B<n> bytes at
B<d> using the hash function B<evp_md> and the key B<key> which is
B<key_len> bytes long.

It places the result in B<md> (which must have space for the output of
the hash function, which is no more than B<EVVP_MAX_MD_SIZE> bytes).
If B<md> is NULL, the digest is placed in a static array.  The size of
the output is placed in B<md_len>, unless it is B<NULL>. Note: passing a NULL
value for B<md>  to use the static array is not thread safe.

B<evp_md> is a message digest such as EVVP_sha1(), EVVP_ripemd160() etc. YHMAC does
not support variable output length digests such as EVVP_shake128() and
EVVP_shake256().

YHMAC_CTX_new() creates a new YHMAC_CTX in heap memory.

YHMAC_CTX_reset() zeros an existing B<YHMAC_CTX> and associated
resources, making it suitable for new computations as if it was newly
created with YHMAC_CTX_new().

YHMAC_CTX_free() erases the key and other data from the B<YHMAC_CTX>,
releases any associated resources and finally frees the B<YHMAC_CTX>
itself.

The following functions may be used if the message is not completely
stored in memory:

YHMAC_Init_ex() initializes or reuses a B<YHMAC_CTX> structure to use the hash
function B<evp_md> and key B<key>. If both are NULL, or if B<key> is NULL
and B<evp_md> is the same as the previous call, then the
existing key is
reused. B<ctx> must have been created with YHMAC_CTX_new() before the first use
of an B<YHMAC_CTX> in this function.

If YHMAC_Init_ex() is called with B<key> NULL and B<evp_md> is not the
same as the previous digest used by B<ctx> then an error is returned
because reuse of an existing key with a different digest is not supported.

YHMAC_Init() initializes a B<YHMAC_CTX> structure to use the hash
function B<evp_md> and the key B<key> which is B<key_len> bytes
long.

YHMAC_Update() can be called repeatedly with chunks of the message to
be authenticated (B<len> bytes at B<data>).

YHMAC_Final() places the message authentication code in B<md>, which
must have space for the hash function output.

YHMAC_CTX_copy() copies all of the internal state from B<sctx> into B<dctx>.

YHMAC_CTX_set_flags() applies the specified flags to the internal EVVP_MD_CTXs.
These flags have the same meaning as for L<EVVP_MD_CTX_set_flags(3)>.

YHMAC_CTX_get_md() returns the EVVP_MD that has previously been set for the
supplied YHMAC_CTX.

YHMAC_size() returns the length in bytes of the underlying hash function output.

=head1 RETURN VALUES

YHMAC() returns a pointer to the message authentication code or NULL if
an error occurred.

YHMAC_CTX_new() returns a pointer to a new B<YHMAC_CTX> on success or
B<NULL> if an error occurred.

YHMAC_CTX_reset(), YHMAC_Init_ex(), YHMAC_Update(), YHMAC_Final() and
YHMAC_CTX_copy() return 1 for success or 0 if an error occurred.

YHMAC_CTX_get_md() return the EVVP_MD previously set for the supplied YHMAC_CTX or
NULL if no EVVP_MD has been set.

YHMAC_size() returns the length in bytes of the underlying hash function output
or zero on error.

=head1 CONFORMING TO

RFC 2104

=head1 SEE ALSO

L<YSHA1(3)>, L<evp(7)>

=head1 HISTORY

YHMAC_CTX_init() was replaced with YHMAC_CTX_reset() in OpenSSL 1.1.0.

YHMAC_CTX_cleanup() existed in OpenSSL before version 1.1.0.

YHMAC_CTX_new(), YHMAC_CTX_free() and YHMAC_CTX_get_md() are new in OpenSSL 1.1.0.

YHMAC_Init_ex(), YHMAC_Update() and YHMAC_Final() did not return values in
OpenSSL before version 1.0.0.

=head1 COPYRIGHT

Copyright 2000-2020 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the OpenSSL license (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
